generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Coin {
  id        Int      @id @default(autoincrement())
  walletId  Int?
  createdAt DateTime @default(now())
  betId     Int?
  Bet       Bet?     @relation(fields: [betId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Wallet    Wallet?  @relation(fields: [walletId], references: [id])
}

model Package {
  id        Int      @id @default(autoincrement())
  price     Float    @db.Real
  createdAt DateTime @default(now())
  amount    Int
}

model Rank {
  id        Int      @id @default(autoincrement())
  rank      Int      @default(autoincrement())
  email     String   @unique
  coins     Int
  createdAt DateTime @default(now())
}

model Sport {
  id         Int     @id @default(autoincrement())
  key        String  @unique
  title      String  @unique
  hasEvents  Boolean @default(false)
  events     Event[]
}

model Event {
  id           Int      @id @default(autoincrement())
  sportKey     String
  commenceTime DateTime
  started      Boolean  @default(false)
  completed    Boolean  @default(false)
  homeTeam     String
  awayTeam     String
  homePrice    Int
  homePoint    Float
  awayPrice    Int
  awayPoint    Float
  sportId      Int
  eventID      String   @unique
  sport        Sport?   @relation(fields: [sportId], references: [id])
  bets         Bet[]
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  createdAt    DateTime @default(now())
  isSubscribed Boolean  @default(false)
  Bet          Bet[]
  Wallet       Wallet?
}

model Wallet {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  userId    Int      @unique
  User      User     @relation(fields: [userId], references: [id])
  Coin      Coin[]
}

model Bet {
  id       Int    @id @default(autoincrement())
  userId   Int
  eventId  Int
  team     String
  betPoint Float
  betPrice Int
  Event    Event  @relation(fields: [eventId], references: [id])
  User     User   @relation(fields: [userId], references: [id])
  Coin     Coin[]
}
